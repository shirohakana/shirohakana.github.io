<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>测试</title>
      <link href="/2020/04/16/%E6%B5%8B%E8%AF%95/"/>
      <url>/2020/04/16/%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>《因为本地难以解决文章首页和缩略图无效的问题所以向cdn方向寻求方法结果意外发现效果不错》</p></blockquote><p><img src="/" class="lazyload" data-src="/2020/04/16/%E6%B5%8B%E8%AF%95/about.jpg"  alt="test"></p>]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo和github建站笔记</title>
      <link href="/2020/04/15/hexo%E5%92%8Cgithub%E5%BB%BA%E7%AB%99%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/04/15/hexo%E5%92%8Cgithub%E5%BB%BA%E7%AB%99%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>即使是用github page 搭建博客，不需要考虑服务器，搭建的过程也是一波三折，在网上寻找的教程也是</p><p>有着误导的部分，<del>归根结底是因为我是个菜鸡</del>，于此写下自己的搭建过程，并将此作为测试。</p><h3 id="使用github-pages服务搭建博客的好处"><a href="#使用github-pages服务搭建博客的好处" class="headerlink" title="使用github pages服务搭建博客的好处"></a>使用github pages服务搭建博客的好处</h3><ol><li>全是静态文件，访问速度快；</li><li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li><li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</li><li>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</li><li>博客内容可以轻松打包、转移、发布到其它平台；</li></ol><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ol><li>有一个<a href="https://github.com/" target="_blank" rel="noopener">github</a>账号</li><li>安装了<a href="https://nodejs.org/en/" target="_blank" rel="noopener">node.js</a>      npm(新版node.js已集成)</li><li>安装了<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">git for windows</a>  </li></ol><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><h4 id="github准备"><a href="#github准备" class="headerlink" title="github准备"></a>github准备</h4><p>​     创建仓库</p><p>在github创建一个名为  <code>用户名.github.io</code> 的仓库，注意仅有这个名称才能用于域名访问，即每个账号只能有一个。   将来域名访问方式为 http://你的用户名.github.io</p><h4 id="使用hexo"><a href="#使用hexo" class="headerlink" title="使用hexo"></a>使用hexo</h4><ol><li>安装hexo </li></ol><p><strong>注意：</strong>hexo的安装及环境要求以及配置等在官网有中文文档说明，用 git bash完成所有安装。</p><p> 所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">$ npm install hexo    &#x2F;&#x2F;此为局部安装包<br></code></pre></td></tr></table></figure><ol start="2"><li><p>确定项目根目录，以下的命令都建议在该目录下完成。</p><p>比如：E:/workspaces/hexo</p></li></ol><p>在终端进入该目录</p><p><strong>注意：</strong>git bash切换盘符需用 cd /e  ，       node.js 切换盘符需用 cd /d  /e</p><figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">$ cd &#x2F;e&#x2F;Workspaces&#x2F;hexo&#x2F;<br></code></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">$ hexo init<br></code></pre></td></tr></table></figure><ol start="3"><li>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">$ hexo init &lt;folder&gt;     &#x2F;不指定则默认在当前目录下创建<br>$ cd &lt;folder&gt;<br></code></pre></td></tr></table></figure><p>新建完成后，指定文件夹的目录如下：(部分未列出)</p><figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">.<br>├── _config.yml      &#x2F;&#x2F;网站的 配置 信息，您可以在此配置大部分的参数<br>├── package.json     &#x2F;&#x2F;应用程序的信息<br>├── scaffolds        &#x2F;&#x2F;模版 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件<br>├── source           &#x2F;&#x2F;资源文件夹是存放用户资源的地方<br>|   ├── _drafts         草稿<br>|   └── _posts         &#x2F;&#x2F;正文<br>└── themes          &#x2F;&#x2F;主题文件夹，你可从github上克隆别人的主题<br></code></pre></td></tr></table></figure><p><strong>注意：</strong>hexo有两种 <code>_config.yml</code>文件，一个是根目录下全局的，一个是各个themes下的。</p><ol start="4"><li>继续在终端执行：</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">$ hexo g             &#x2F;&#x2F;生成静态文件<br></code></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">$ hexo s             &#x2F;&#x2F;开启本地预览服务，打开浏览器访问 http:&#x2F;&#x2F;localhost:4000 可看到内容<br></code></pre></td></tr></table></figure><p>本地预览可确认之前的步骤是否正确。</p><ol start="5"><li>配置   根目录下的 <code>_config.yml</code>  文件</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">deploy:<br>type: git  <br>repo: https:&#x2F;&#x2F;github.com&#x2F;&lt;username&gt;&#x2F;&lt;project&gt;  <br># example, https:&#x2F;&#x2F;github.com&#x2F;hexojs&#x2F;hexojs.github.io  <br>branch: master<br></code></pre></td></tr></table></figure><p><strong>注意：</strong>   冒号与值之间需空格</p><ol start="6"><li>接下来可以考虑在github克隆别人的主题</li></ol><p>​       1. 在hexo根目录执行</p><p>   git clone -b master <a href="https://github.com/xxx/hexo-theme-yyy" target="_blank" rel="noopener">https://github.com/xxx/hexo-theme-yyy</a> themes/yyy</p><p>​          // 其中xxx为用户名，yyy为主题名    </p><p>​        2.修改 hexo 的根目录下的 _config.yml 的 theme 字段为 yyy</p><p>​        3.也许需要安装一些其他插件，请根据提示安装，npm install 插件名 –save</p><ol start="7"><li>执行命令：<br>​    hexo clean                                //清除缓存文件 (db.json) 和已生成的静态文件 (public)。</li></ol><p>​    hexo  deploy                                        //部署网站</p>]]></content>
      
      
      <categories>
          
          <category> note </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
